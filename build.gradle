buildscript {
    repositories {
        maven {
            url = 'https://files.minecraftforge.net/maven'
        }
        maven { url = 'https://repo.spongepowered.org/repository/maven-public/' }
        maven {
            url = 'https://maven.parchmentmc.org'
        }
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
        classpath group: 'org.spongepowered', name: 'mixingradle', version: '0.7-SNAPSHOT'
        classpath 'org.parchmentmc:librarian:1.+'
    }
}


apply plugin: 'net.minecraftforge.gradle'
// Only edit below this line, the above code adds and enables the necessary things for Forge to be setup.
apply plugin: 'eclipse'
apply plugin: 'maven-publish'

apply plugin: 'org.spongepowered.mixin'
apply plugin: 'org.parchmentmc.librarian.forgegradle'

mixin {
    add sourceSets.main, "storagedrawersfixes.refmap.json"
}

version = '1.3.0'
group = 'com.juh9870.storagedrawersfixes' // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = 'storagedrawersfixes'

sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.

println('Java: ' + System.getProperty('java.version') + ' JVM: ' + System.getProperty('java.vm.version') + '(' + System.getProperty('java.vendor') + ') Arch: ' + System.getProperty('os.arch'))
minecraft {
    mappings channel: 'parchment', version: '2021.10.17-1.16.5'
    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')
    runs {
        client {
            workingDirectory project.file('run')
            args "-mixin.config=storagedrawersfixes.mixins.json", "--username", "hminer"
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'

            mods {
                storagedrawersfixes {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'

            mods {
                storagedrawersfixes {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'
            args '--mod', 'storagedrawersfixes', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')

            mods {
                storagedrawersfixes {
                    source sourceSets.main
                }
            }
        }
    }
}

// Include resources generated by data generators.
sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
    maven {
        url "https://www.cursemaven.com"
        content {
            includeGroup "curse.maven"
        }
    }
    maven {
        url = "https://modmaven.dev/"
        metadataSources {
            mavenPom()
            artifact()
            ignoreGradleMetadataRedirection()
        }
    }
//    maven {
//        // Industrial Foregoing
//        url 'https://cdn.hrzn.studio/maven/'
//    }
}

dependencies {
    minecraft 'net.minecraftforge:forge:1.16.5-36.2.9'

    implementation fg.deobf("curse.maven:storage-drawers-223852:${storagedrawers_versioncode}")

    runtimeOnly fg.deobf("curse.maven:framed-compacting-drawers-376351:${framedcompactingdrawers_versioncode}")
    runtimeOnly fg.deobf("curse.maven:more_storage_drawers-591494:${more_storage_drawers_versioncode}")

    runtimeOnly fg.deobf("curse.maven:pretty-pipes-376737:3724799")

    runtimeOnly fg.deobf("curse.maven:common-capabilities-247007:3482420")
    runtimeOnly fg.deobf("curse.maven:cyclops-core-232758:3900678")
    runtimeOnly fg.deobf("curse.maven:integrated-dynamics-236307:3963794")
    runtimeOnly fg.deobf("curse.maven:integrated-tunnels-251389:3957238")
    runtimeOnly fg.deobf("curse.maven:integrated-crafting-287357:3993412")
    runtimeOnly fg.deobf("curse.maven:integrated-terminals-295910:3694446")

    annotationProcessor 'org.spongepowered:mixin:0.8:processor'
}

jar {
    manifest {
        attributes([
                "Specification-Title"     : "storagedrawersfixes",
                "Specification-Vendor"    : "juh9870",
                "Specification-Version"   : "1", // We are version 1 of ourselves
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : "${version}",
                "Implementation-Vendor"   : "juh9870",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

jar {
    manifest {
        attributes([
                "MixinConfigs": "storagedrawersfixes.mixins.json"
        ])
    }
}

jar.finalizedBy('reobfJar')

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file:///${project.projectDir}/mcmodsrepo"
        }
    }
}
